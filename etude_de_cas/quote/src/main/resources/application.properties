com.example.adapter.rest.clientservice.ClientAuthorService/mp-rest/url=${AUTHOR_API}
quarkus.http.port=80

quarkus.datasource.db-kind=${DB_KIND}
quarkus.datasource.jdbc.url=${DB_URL}
quarkus.datasource.username=${DB_USERNAME}
quarkus.datasource.password=${DB_PASSWORD}
quarkus.hibernate-orm.database.generation=${DB_STRATEGY}
#quarkus.datasource.db-kind=mysql
#quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL}
#quarkus.datasource.username=${QUARKUS_DATASOURCE_JDBC_USERNAME}
#quarkus.datasource.password=${QUARKUS_DATASOURCE_JDBC_PASSWORD}
#quarkus.hibernate-orm.database.generation=update

#quarkus.application.name=author-microservice
quarkus.otel.exporter.otlp.traces.endpoint=http://otel:4317 
#quarkus.otel.exporter.otlp.traces.headers=authorization=Bearer my_secret
#quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# Alternative to the console log
#quarkus.http.access-log.pattern="...traceId=%{X,traceId} spanId=%{X,spanId}"
#quarkus.http.cors=true
#quarkus.http.cors.origins=/.*/

quarkus.container-image.group=
quarkus.container-image.name=quote-microservice-image
quarkus.container-image.tag=latest
quarkus.container-image.registry=
quarkus.kubernetes.resources.limits.cpu= 200m
quarkus.kubernetes.resources.limits.memory= 256Mi
quarkus.kubernetes.resources.requests.cpu= 100m
quarkus.kubernetes.resources.requests.memory=128Mi
# quarkus.kubernetes.liveness-probe.http-action-path=/q/health/live
# quarkus.kubernetes.readiness-probe.http-action-path=/q/health/ready
# quarkus.kubernetes.startup-probe.http-action-path=/q/health/started